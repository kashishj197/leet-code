/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        if (root == null) {
            return new ArrayList<>();
        }
        List<Integer> right = new ArrayList<>();
        showRightView(right, root, 0);
        return right;
    }
    public void showRightView(List<Integer> right, TreeNode root, int depth) {
        if (root == null) {
            return;
        }
        if (depth == right.size()) {
            right.add(root.val);
        }
        showRightView(right, root.right, depth + 1);
        showRightView(right, root.left, depth + 1);
    }
}